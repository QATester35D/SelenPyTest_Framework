name: SelenPyTest CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.CI_DB_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.CI_DB_NAME }}
          MYSQL_USER: ${{ secrets.CI_DB_USER }}
          MYSQL_PASSWORD: ${{ secrets.CI_DB_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=10

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      #Step 2: Set PYTHONPATH
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      # Step 3: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r QATests/requirements.txt
          pip install flake8 pytest

      # Step 5: Syntax check and lint
      - name: Lint with flake8
        run: |
          # Show warnings but don't fail the job for now
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true

      # Step 6: 
      - name: Load environment variables and Wait for MySQL to be ready
        env:
          DB_HOST: ${{ secrets.CI_DB_HOST }}
          DB_PORT: ${{ secrets.CI_DB_PORT }}
          DB_USER: ${{ secrets.CI_DB_USER }}
          DB_PASSWORD: ${{ secrets.CI_DB_PASSWORD }}
          DB_NAME: ${{ secrets.CI_DB_NAME }}
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..40}; do
            if mysqladmin ping -h"$DB_HOST" -P"$DB_PORT" -u"$DB_USER" -p"$DB_PASSWORD" --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL... ($i)"
            sleep 2
          done

          # Final check if still not up
          if ! mysqladmin ping -h"$DB_HOST" -P"$DB_PORT" -u"$DB_USER" -p"$DB_PASSWORD" --silent; then
            echo "MySQL did not start in time."
            exit 1
          fi
      - name: Load database schema and seed data
        run: |
          echo "Loading schema and seed data..."
          mysql -h "$DB_HOST" -P "$DB_PORT" -u "$DB_USER" -p"$DB_PASSWORD" "$DB_NAME" < QATests/db/sql/schema.sql
          mysql -h "$DB_HOST" -P "$DB_PORT" -u "$DB_USER" -p"$DB_PASSWORD" "$DB_NAME" < QATests/db/sql/seed_data.sql

      # Step 6: Run tests
      - name: Run pytest tests
        run: |
          pytest QATests --maxfail=1 --disable-warnings -v
